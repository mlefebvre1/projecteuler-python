from project_euler.number_theory.series import fibonacci_generator

from project_euler.utils.timeit import timeit


@timeit
def problem02():
    """
    Even Fibonacci numbers
    Problem 2
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
    the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
    even-valued terms.
    """
    max_f_value = int(4e6)
    total = 0
    fib_gen = fibonacci_generator()
    while 1:
        fn = next(fib_gen)
        if fn >= max_f_value:
            break
        if fn % 2 == 0:
            total += fn
    return total


if __name__ == "__main__":
    problem02()
